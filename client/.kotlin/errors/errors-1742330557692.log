kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/maxmaeder/local-root/open-pin/client/appframework/src/main/java/org/openpin/appframework/ui/components/BaseButton.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:BaseLaserButton-2juEVfQ visibility:public modality:FINAL <> (isFocused:kotlin.Boolean, isActive:kotlin.Boolean, variant:org.openpin.appframework.ui.config.ButtonVariant, onClick:kotlin.Function0<kotlin.Unit>, magnetOffset:androidx.compose.ui.geometry.Offset, scaleFactor:kotlin.Float, shadowEnabled:kotlin.Boolean, modifier:androidx.compose.ui.Modifier, baseButtonConfig:org.openpin.appframework.ui.config.BaseButtonConfig, shape:androidx.compose.ui.graphics.Shape, content:@[Composable] kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:isFocused index:0 type:kotlin.Boolean
  VALUE_PARAMETER name:isActive index:1 type:kotlin.Boolean
  VALUE_PARAMETER name:variant index:2 type:org.openpin.appframework.ui.config.ButtonVariant
  VALUE_PARAMETER name:onClick index:3 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:magnetOffset index:4 type:androidx.compose.ui.geometry.Offset
  VALUE_PARAMETER name:scaleFactor index:5 type:kotlin.Float
  VALUE_PARAMETER name:shadowEnabled index:6 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:modifier index:7 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:baseButtonConfig index:8 type:org.openpin.appframework.ui.config.BaseButtonConfig
  VALUE_PARAMETER name:shape index:9 type:androidx.compose.ui.graphics.Shape
  VALUE_PARAMETER name:content index:10 type:@[Composable] kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR name:variantConfig type:org.openpin.appframework.ui.config.ButtonVariantConfig [val]
      BLOCK type=org.openpin.appframework.ui.config.ButtonVariantConfig origin=FOLDED_ELVIS
        WHEN type=org.openpin.appframework.ui.config.ButtonVariantConfig origin=FOLDED_ELVIS
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:org.openpin.appframework.ui.config.ButtonVariantConfig? [val]
                CALL 'public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? [operator] declared in kotlin.collections.Map' type=org.openpin.appframework.ui.config.ButtonVariantConfig? origin=GET_ARRAY_ELEMENT
                  $this: CALL 'public final fun <get-variants> (): kotlin.collections.Map<org.openpin.appframework.ui.config.ButtonVariant, org.openpin.appframework.ui.config.ButtonVariantConfig> declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=kotlin.collections.Map<org.openpin.appframework.ui.config.ButtonVariant, org.openpin.appframework.ui.config.ButtonVariantConfig> origin=GET_PROPERTY
                    $this: GET_VAR 'baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
                  key: GET_VAR 'variant: org.openpin.appframework.ui.config.ButtonVariant declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariant origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val tmp0_elvis_lhs: org.openpin.appframework.ui.config.ButtonVariantConfig? [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariantConfig? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: GET_VAR 'val tmp0_elvis_lhs: org.openpin.appframework.ui.config.ButtonVariantConfig? [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariantConfig? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: BLOCK type=kotlin.Nothing origin=null
              CALL 'public final fun error (message: kotlin.Any): kotlin.Nothing [inline] declared in kotlin.PreconditionsKt' type=kotlin.Nothing origin=null
                message: STRING_CONCATENATION type=kotlin.String
                  CONST String type=kotlin.String value="Button variant config not defined for "
                  GET_VAR 'variant: org.openpin.appframework.ui.config.ButtonVariant declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariant origin=null
              CALL 'public final fun throwKotlinNothingValueException (): kotlin.Nothing declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Nothing origin=null
    VAR name:stateConfig type:org.openpin.appframework.ui.config.ButtonStateConfig [val]
      WHEN type=org.openpin.appframework.ui.config.ButtonStateConfig origin=WHEN
        BRANCH
          if: GET_VAR 'isActive: kotlin.Boolean declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=kotlin.Boolean origin=null
          then: CALL 'public final fun <get-active> (): org.openpin.appframework.ui.config.ButtonStateConfig declared in org.openpin.appframework.ui.config.ButtonVariantConfig' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=GET_PROPERTY
            $this: GET_VAR 'val variantConfig: org.openpin.appframework.ui.config.ButtonVariantConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariantConfig origin=null
        BRANCH
          if: GET_VAR 'isFocused: kotlin.Boolean declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=kotlin.Boolean origin=null
          then: CALL 'public final fun <get-focused> (): org.openpin.appframework.ui.config.ButtonStateConfig declared in org.openpin.appframework.ui.config.ButtonVariantConfig' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=GET_PROPERTY
            $this: GET_VAR 'val variantConfig: org.openpin.appframework.ui.config.ButtonVariantConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariantConfig origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: CALL 'public final fun <get-normal> (): org.openpin.appframework.ui.config.ButtonStateConfig declared in org.openpin.appframework.ui.config.ButtonVariantConfig' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=GET_PROPERTY
            $this: GET_VAR 'val variantConfig: org.openpin.appframework.ui.config.ButtonVariantConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonVariantConfig origin=null
    VAR PROPERTY_DELEGATE name:animatedBackgroundColor$delegate type:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val]
      CALL 'public final fun animateColorAsState-a9xZ5FE$default (targetValue: androidx.compose.ui.graphics.Color, animationSpec: androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>?, label: kotlin.String?, finishedListener: kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> declared in androidx.compose.animation.SingleValueAnimationKt' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=DEFAULT_DISPATCH_CALL
        targetValue: CALL 'public final fun getBackgroundColor-0d7_KjU (): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.config.ButtonStateConfig' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val stateConfig: org.openpin.appframework.ui.config.ButtonStateConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=null
        animationSpec: TYPE_OP type=androidx.compose.animation.core.TweenSpec<androidx.compose.ui.graphics.Color> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.TweenSpec<androidx.compose.ui.graphics.Color>
          CALL 'public final fun tween$default <T> (durationMillis: kotlin.Int, delayMillis: kotlin.Int, easing: androidx.compose.animation.core.Easing?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> declared in androidx.compose.animation.core.AnimationSpecKt' type=androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> origin=DEFAULT_DISPATCH_CALL
            <T>: androidx.compose.ui.graphics.Color
            durationMillis: CALL 'public final fun <get-animationDuration> (): kotlin.Int declared in org.openpin.appframework.ui.config.AppearanceTransitionConfig' type=kotlin.Int origin=GET_PROPERTY
              $this: CALL 'public final fun <get-appearanceTransition> (): org.openpin.appframework.ui.config.AppearanceTransitionConfig declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=org.openpin.appframework.ui.config.AppearanceTransitionConfig origin=GET_PROPERTY
                $this: GET_VAR 'baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
            delayMillis: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            easing: COMPOSITE type=androidx.compose.animation.core.Easing? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.Easing? value=null
            $mask0: CONST Int type=kotlin.Int value=6
            $handler: CONST Null type=kotlin.Any? value=null
        label: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
          CONST Null type=kotlin.String? value=null
        finishedListener: COMPOSITE type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? value=null
        $mask0: CONST Int type=kotlin.Int value=12
        $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:animatedContentColor$delegate type:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val]
      CALL 'public final fun animateColorAsState-a9xZ5FE$default (targetValue: androidx.compose.ui.graphics.Color, animationSpec: androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>?, label: kotlin.String?, finishedListener: kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> declared in androidx.compose.animation.SingleValueAnimationKt' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=DEFAULT_DISPATCH_CALL
        targetValue: CALL 'public final fun getTextColor-0d7_KjU (): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.config.ButtonStateConfig' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val stateConfig: org.openpin.appframework.ui.config.ButtonStateConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=null
        animationSpec: TYPE_OP type=androidx.compose.animation.core.TweenSpec<androidx.compose.ui.graphics.Color> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.TweenSpec<androidx.compose.ui.graphics.Color>
          CALL 'public final fun tween$default <T> (durationMillis: kotlin.Int, delayMillis: kotlin.Int, easing: androidx.compose.animation.core.Easing?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> declared in androidx.compose.animation.core.AnimationSpecKt' type=androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> origin=DEFAULT_DISPATCH_CALL
            <T>: androidx.compose.ui.graphics.Color
            durationMillis: CALL 'public final fun <get-animationDuration> (): kotlin.Int declared in org.openpin.appframework.ui.config.AppearanceTransitionConfig' type=kotlin.Int origin=GET_PROPERTY
              $this: CALL 'public final fun <get-appearanceTransition> (): org.openpin.appframework.ui.config.AppearanceTransitionConfig declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=org.openpin.appframework.ui.config.AppearanceTransitionConfig origin=GET_PROPERTY
                $this: GET_VAR 'baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
            delayMillis: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            easing: COMPOSITE type=androidx.compose.animation.core.Easing? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.Easing? value=null
            $mask0: CONST Int type=kotlin.Int value=6
            $handler: CONST Null type=kotlin.Any? value=null
        label: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
          CONST Null type=kotlin.String? value=null
        finishedListener: COMPOSITE type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? value=null
        $mask0: CONST Int type=kotlin.Int value=12
        $handler: CONST Null type=kotlin.Any? value=null
    VAR name:borderWidth type:androidx.compose.ui.unit.Dp [val]
      CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
        $receiver: CONST Int type=kotlin.Int value=4
    VAR name:borderModifier type:androidx.compose.ui.Modifier [val]
      WHEN type=androidx.compose.ui.Modifier origin=IF
        BRANCH
          if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
            arg0: CALL 'public final fun <get-borderStyle> (): org.openpin.appframework.ui.config.BorderStyle declared in org.openpin.appframework.ui.config.ButtonStateConfig' type=org.openpin.appframework.ui.config.BorderStyle origin=GET_PROPERTY
              $this: GET_VAR 'val stateConfig: org.openpin.appframework.ui.config.ButtonStateConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=null
            arg1: GET_FIELD 'FIELD FIELD_FOR_ENUM_ENTRY name:Dashed type:org.openpin.appframework.ui.config.BorderStyle visibility:public [final,static] declared in org.openpin.appframework.ui.config.BorderStyle' type=org.openpin.appframework.ui.config.BorderStyle origin=null
          then: BLOCK type=androidx.compose.ui.Modifier origin=null
            CALL 'public final fun border-xT4_qwU (width: androidx.compose.ui.unit.Dp, color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BorderKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              width: GET_VAR 'val borderWidth: androidx.compose.ui.unit.Dp [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.unit.Dp origin=null
              color: CALL 'public final fun getBorderColor-0d7_KjU (): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.config.ButtonStateConfig' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                $this: GET_VAR 'val stateConfig: org.openpin.appframework.ui.config.ButtonStateConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=null
              shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.graphics.Shape origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: BLOCK type=androidx.compose.ui.Modifier origin=null
            CALL 'public final fun border-xT4_qwU (width: androidx.compose.ui.unit.Dp, color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BorderKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              width: GET_VAR 'val borderWidth: androidx.compose.ui.unit.Dp [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.unit.Dp origin=null
              color: CALL 'public final fun getBorderColor-0d7_KjU (): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.config.ButtonStateConfig' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                $this: GET_VAR 'val stateConfig: org.openpin.appframework.ui.config.ButtonStateConfig [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.ButtonStateConfig origin=null
              shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.graphics.Shape origin=null
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      contentAlignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment? value=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun BaseLaserButton_2juEVfQ$lambda$6 ($shadowEnabled: kotlin.Boolean, $magnetOffset: androidx.compose.ui.geometry.Offset, $baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig, $shape: androidx.compose.ui.graphics.Shape, $modifier: androidx.compose.ui.Modifier, $scaleFactor: kotlin.Float, $borderModifier: androidx.compose.ui.Modifier, $animatedBackgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>, $animatedContentColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>, $content: @[Composable] kotlin.Function0<kotlin.Unit>): kotlin.Unit declared in org.openpin.appframework.ui.components.BaseButtonKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $shadowEnabled: GET_VAR 'shadowEnabled: kotlin.Boolean declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=kotlin.Boolean origin=null
          $magnetOffset: GET_VAR 'magnetOffset: androidx.compose.ui.geometry.Offset declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.geometry.Offset origin=null
          $baseButtonConfig: GET_VAR 'baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
          $shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.graphics.Shape origin=null
          $modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.Modifier origin=null
          $scaleFactor: GET_VAR 'scaleFactor: kotlin.Float declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=kotlin.Float origin=null
          $borderModifier: GET_VAR 'val borderModifier: androidx.compose.ui.Modifier [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.ui.Modifier origin=null
          $animatedBackgroundColor$delegate: GET_VAR 'val animatedBackgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
          $animatedContentColor$delegate: GET_VAR 'val animatedContentColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
          $content: GET_VAR 'content: @[Composable] kotlin.Function0<kotlin.Unit> declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton-2juEVfQ' type=@[Composable] kotlin.Function0<kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=7
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:BaseLaserButton_2juEVfQ$lambda$6 visibility:private modality:FINAL <> ($receiver:androidx.compose.foundation.layout.BoxScope, $shadowEnabled:kotlin.Boolean, $magnetOffset:androidx.compose.ui.geometry.Offset, $baseButtonConfig:org.openpin.appframework.ui.config.BaseButtonConfig, $shape:androidx.compose.ui.graphics.Shape, $modifier:androidx.compose.ui.Modifier, $scaleFactor:kotlin.Float, $borderModifier:androidx.compose.ui.Modifier, $animatedBackgroundColor$delegate:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>, $animatedContentColor$delegate:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>, $content:@[Composable] kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  $receiver: VALUE_PARAMETER name:$this$Box type:androidx.compose.foundation.layout.BoxScope
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$shadowEnabled index:0 type:kotlin.Boolean
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$magnetOffset index:1 type:androidx.compose.ui.geometry.Offset
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$baseButtonConfig index:2 type:org.openpin.appframework.ui.config.BaseButtonConfig
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$shape index:3 type:androidx.compose.ui.graphics.Shape
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$modifier index:4 type:androidx.compose.ui.Modifier
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$scaleFactor index:5 type:kotlin.Float
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$borderModifier index:6 type:androidx.compose.ui.Modifier
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$animatedBackgroundColor$delegate index:7 type:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$animatedContentColor$delegate index:8 type:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$content index:9 type:@[Composable] kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR name:$i$a$-Box$default-BaseButtonKt$BaseLaserButton$1 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: GET_VAR '$shadowEnabled: kotlin.Boolean declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=kotlin.Boolean origin=null
        then: BLOCK type=kotlin.Unit origin=null
          VAR name:shadowOffsetX type:kotlin.Int [val]
            CALL 'public final fun roundToInt (): kotlin.Int declared in kotlin.math.MathKt' type=kotlin.Int origin=null
              $receiver: CALL 'public final fun times (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=MUL
                $this: CALL 'public final fun unaryMinus (): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=null
                  $this: CALL 'public final fun getX-impl (arg0: androidx.compose.ui.geometry.Offset): kotlin.Float declared in androidx.compose.ui.geometry.Offset' type=kotlin.Float origin=GET_PROPERTY
                    arg0: GET_VAR '$magnetOffset: androidx.compose.ui.geometry.Offset declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.geometry.Offset origin=null
                other: CALL 'public final fun <get-scaleFactor> (): kotlin.Float declared in org.openpin.appframework.ui.config.ButtonShadowConfig' type=kotlin.Float origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-shadow> (): org.openpin.appframework.ui.config.ButtonShadowConfig declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=org.openpin.appframework.ui.config.ButtonShadowConfig origin=GET_PROPERTY
                    $this: GET_VAR '$baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
          VAR name:shadowOffsetY type:kotlin.Int [val]
            CALL 'public final fun roundToInt (): kotlin.Int declared in kotlin.math.MathKt' type=kotlin.Int origin=null
              $receiver: CALL 'public final fun times (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=MUL
                $this: CALL 'public final fun unaryMinus (): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=null
                  $this: CALL 'public final fun getY-impl (arg0: androidx.compose.ui.geometry.Offset): kotlin.Float declared in androidx.compose.ui.geometry.Offset' type=kotlin.Float origin=GET_PROPERTY
                    arg0: GET_VAR '$magnetOffset: androidx.compose.ui.geometry.Offset declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.geometry.Offset origin=null
                other: CALL 'public final fun <get-scaleFactor> (): kotlin.Float declared in org.openpin.appframework.ui.config.ButtonShadowConfig' type=kotlin.Float origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-shadow> (): org.openpin.appframework.ui.config.ButtonShadowConfig declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=org.openpin.appframework.ui.config.ButtonShadowConfig origin=GET_PROPERTY
                    $this: GET_VAR '$baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
          CALL 'public final fun Box (modifier: androidx.compose.ui.Modifier): kotlin.Unit declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=null
            modifier: CALL 'public abstract fun matchParentSize (): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.BoxScope' type=androidx.compose.ui.Modifier origin=null
              $this: GET_VAR '$this$Box: androidx.compose.foundation.layout.BoxScope declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.foundation.layout.BoxScope origin=null
              $receiver: CALL 'public final fun background-bw27NRU (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=null
                $receiver: CALL 'public final fun offset (offset: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.OffsetKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                  offset: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                      <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>
                      dynamicCall: CALL 'public final fun invoke (p0: kotlin.Int, p1: kotlin.Int): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                        p0: GET_VAR 'val shadowOffsetX: kotlin.Int [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=kotlin.Int origin=null
                        p1: GET_VAR 'val shadowOffsetY: kotlin.Int [val] declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=kotlin.Int origin=null
                      bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                        tag: CONST Int type=kotlin.Int value=6
                        owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                        name: CONST String type=kotlin.String value="metafactory"
                        descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                        isInterface: CONST Boolean type=kotlin.Boolean value=false
                      bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                        CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                          method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                        RAW_FUNCTION_REFERENCE 'private final fun BaseLaserButton_2juEVfQ$lambda$6$lambda$2 ($shadowOffsetX: kotlin.Int, $shadowOffsetY: kotlin.Int, $this$offset: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? declared in org.openpin.appframework.ui.components.BaseButtonKt' type=kotlin.Any
                        CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                          method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
                color: CALL 'public final fun getLASER_503_MUTED-0d7_KjU (): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.config.DeviceColors' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                  $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:org.openpin.appframework.ui.config.DeviceColors visibility:public [final,static] declared in org.openpin.appframework.ui.config.DeviceColors' type=org.openpin.appframework.ui.config.DeviceColors origin=null
                shape: GET_VAR '$shape: androidx.compose.ui.graphics.Shape declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.graphics.Shape origin=null
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier origin=null
          $this: CALL 'public final fun background-bw27NRU (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=null
            $receiver: CALL 'public final fun scale (scale: kotlin.Float): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ScaleKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: CALL 'public final fun offset (offset: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.OffsetKt' type=androidx.compose.ui.Modifier origin=null
                $receiver: GET_VAR '$modifier: androidx.compose.ui.Modifier declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.Modifier origin=null
                offset: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=LAMBDA
                  COMPOSITE type=kotlin.Unit origin=null
                  CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                    <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>
                    dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.ui.geometry.Offset): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                      p0: GET_VAR '$magnetOffset: androidx.compose.ui.geometry.Offset declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.geometry.Offset origin=null
                    bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                      tag: CONST Int type=kotlin.Int value=6
                      owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                      name: CONST String type=kotlin.String value="metafactory"
                      descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                      isInterface: CONST Boolean type=kotlin.Boolean value=false
                    bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                      CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                        method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                      RAW_FUNCTION_REFERENCE 'private final fun BaseLaserButton_2juEVfQ$lambda$6$lambda$3 ($magnetOffset: androidx.compose.ui.geometry.Offset, $this$offset: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? declared in org.openpin.appframework.ui.components.BaseButtonKt' type=kotlin.Any
                      CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                        method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
              scale: GET_VAR '$scaleFactor: kotlin.Float declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=kotlin.Float origin=null
            color: CALL 'private final fun BaseLaserButton_2juEVfQ$lambda$0 ($animatedBackgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>): androidx.compose.ui.graphics.Color declared in org.openpin.appframework.ui.components.BaseButtonKt' type=androidx.compose.ui.graphics.Color origin=GET_LOCAL_PROPERTY
              $animatedBackgroundColor$delegate: GET_VAR '$animatedBackgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
            shape: GET_VAR '$shape: androidx.compose.ui.graphics.Shape declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.graphics.Shape origin=null
          other: GET_VAR '$borderModifier: androidx.compose.ui.Modifier declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.ui.Modifier origin=null
        all: CALL 'public final fun getPadding-D9Ej5fM (): androidx.compose.ui.unit.Dp declared in org.openpin.appframework.ui.config.BaseButtonConfig' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $this: GET_VAR '$baseButtonConfig: org.openpin.appframework.ui.config.BaseButtonConfig declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=org.openpin.appframework.ui.config.BaseButtonConfig origin=null
      contentAlignment: CALL 'public final fun <get-Center> (): androidx.compose.ui.Alignment declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment origin=GET_PROPERTY
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun BaseLaserButton_2juEVfQ$lambda$6$lambda$5 ($animatedContentColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>, $content: @[Composable] kotlin.Function0<kotlin.Unit>): kotlin.Unit declared in org.openpin.appframework.ui.components.BaseButtonKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $animatedContentColor$delegate: GET_VAR '$animatedContentColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
          $content: GET_VAR '$content: @[Composable] kotlin.Function0<kotlin.Unit> declared in org.openpin.appframework.ui.components.BaseButtonKt.BaseLaserButton_2juEVfQ$lambda$6' type=@[Composable] kotlin.Function0<kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=4
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:100)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:561)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:589)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 69 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/BoxKt;.Box$default(Landroidx/compose/ui/Modifier;Landroidx/compose/ui/Alignment;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 81 more


